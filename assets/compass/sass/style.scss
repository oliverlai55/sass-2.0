body{
	color: black;

}

$primaryDivTextColor: #cf400a;
@include header

body {
	color: $primaryDivTextColor;
}

//scoped variables
#test-div{
	$primaryDivTextColor: #00ff00;
	color: $primaryDivTextColor;
	color: shade( $primaryDivTextColor, 10%);
}

//sass math - you cannot mix unit types, such as % and px, in math.
// + -- addition
// - -- subtraction
// / -- division (sometimes, / is shorthand... ie font; in these case, the / must be inside () )

// font: (16px/14px)
// * -- multiplication
// % -- modulus
// == -- conditional equal
// != -- conditional non-equal

//Homemade bootstrap
$containerWidth: 100%;
.homemade-col-1{
	width: $containerWidth;
}
.homemade-col-2{
	width: ($containerWidth / 2);
	float: left;
}
.homemade-col-4{
	width: ($containerWidth / 4);
	float: left;
}

.random-size{
	font-size: random(100) + px
}

.max-size{
	font-size: max(23, 62, 19, 44, 12, 51) + px;
}

// sass functions
// http://sass-lang.com/documentation/Sass/Script/Functions.html

Extend directive
.input{
	border-radius: 10px;
	color: white;
	border: 2px solid #0000ff;
	padding: 10px 20px;
	clear: both;
}

.second-input{
	@extend .input;
	color: #0000ff;
}

@mixin border-radius($radius){
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin circle($radius, $color, $borderColor){
	border-radius: $radius;
	color: $color;
	border: 3px solid $borderColor;
}
.circle{
	@include border-radius(10px);
	border: 3px solid #ffff00;
}

.circle-two{
	@include circle(20px, #ff00ff, #000000);
}

.circle-three{
	@include circle(50px, #0000ff, #cacaca)
}

@function getColumnWidth($width, $columns, $margin){
	@return ($width / $numColumns) - ($margin * 2);
}

$numColumns:4;
.column-test{
	background: black;
	width: getColumnWidth(300px, $numColumns, 1%);
}
